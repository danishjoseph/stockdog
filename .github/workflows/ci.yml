name: CI

env:
  NODE_VERSION: 18

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  issues: write
  pull-requests: write

jobs:
  test:
    name: Unit tests & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install test dependencies
        run: yarn install --production=false --only=dev

      - name: Lint code
        run: yarn nx run-many -t lint

      - name: Run Unit tests
        run: yarn nx run-many -t test

  build:
    name: Build Docker image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install test dependencies
        run: yarn install --production=false --only=dev

      - name: Get version number
        id: version
        run: echo "VERSION=$(cat ./package.json | jq -r '.version')" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          yarn nx run backend:docker-build --tag=${{ secrets.DOCKER_HUB_USERNAME }}/stockdog:v-${{ env.VERSION  }}
          docker save ${{ secrets.DOCKER_HUB_USERNAME }}/stockdog:v-${{ env.VERSION  }} > docker_image.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: docker_image.tar
  push:
    name: Push Docker image to DockerHub
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load < docker_image.tar

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/stockdog:v-${{ needs.build.outputs.VERSION }}
